{"version":3,"sources":["app/components/dropdown-select/dropdown-select.tsx","app/components/scatterplot-chart/scatterplot-chart.tsx","app/components/home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DropdownSelect","options","handleXAxisChange","handleYAxisChange","xAxisValue","yAxisValue","className","id","onChange","value","map","opt","label","ScatterChart","props","myRef","tagsData","numericKeys","React","createRef","Object","keys","data","parsedObj","JSON","parse","tags","object","entries","key","push","getNumericKeys","state","xAxisKey","yAxisKey","selectedIds","bind","renderGraph","this","margin","width","height","d3","remove","svg","current","append","attr","x","domain","getMaxValue","range","call","style","text","y","selectAll","join","d","includes","on","e","classed","layerX","layerY","each","state_data","setState","s","select","empty","parseInt","move","event","target","selectedTags","filter","obj","ref","length","slice","tag","Component","reduce","prev","HomeComponent","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c57137a7.chunk.js","sourcesContent":["import React, { ChangeEventHandler, FC } from \"react\";\nimport \"./dropdown-select.css\";\n\ninterface DropdownSelectProps {\n  options: { value: string; label: string }[];\n  handleXAxisChange: ChangeEventHandler<HTMLSelectElement>;\n  handleYAxisChange: ChangeEventHandler<HTMLSelectElement>;\n  xAxisValue: string;\n  yAxisValue: string;\n}\n\nexport const DropdownSelect: FC<DropdownSelectProps> = ({\n  options,\n  handleXAxisChange,\n  handleYAxisChange,\n  xAxisValue,\n  yAxisValue,\n}) => {\n  return (\n    <div className=\"container\">\n      <div>\n        <h5>Dropdown X Axis</h5>\n        <select id=\"xAxis\" onChange={handleXAxisChange} value={xAxisValue}>\n          {options.map((opt) => {\n            return (\n              <option key={opt.value} value={opt.value}>\n                {opt.label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <div>\n        <h5>Dropdown Y Axis</h5>\n        <select id=\"yAxis\" onChange={handleYAxisChange} value={yAxisValue}>\n          {options.map((opt) => {\n            return (\n              <option key={opt.value} value={opt.value}>\n                {opt.label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    </div>\n  );\n};\n","import * as d3 from \"d3\";\nimport React, { RefObject } from \"react\";\nimport data from \"../../data/data.json\";\nimport { DropdownSelect } from \"../dropdown-select/dropdown-select\";\nimport \"./scatterplot-chart.css\";\ninterface ScatterChartProps { }\ninterface State {\n  xAxisKey: string;\n  yAxisKey: string;\n  selectedIds: number[];\n}\nclass ScatterChart extends React.Component<ScatterChartProps, State> {\n  myRef: RefObject<HTMLDivElement>;\n  tagsData: any[];\n  numericKeys: string[];\n\n  constructor(props: ScatterChartProps) {\n    super(props);\n    this.myRef = React.createRef();\n    this.tagsData = getTagsData();\n    this.numericKeys = getNumericKeys(this.tagsData[0]);\n    this.state = {\n      xAxisKey: this.numericKeys[0],\n      yAxisKey: this.numericKeys[1],\n      selectedIds: [],\n    };\n    this.handleXAxisChange = this.handleXAxisChange.bind(this);\n    this.handleYAxisChange = this.handleYAxisChange.bind(this);\n    this.renderGraph = this.renderGraph.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderGraph();\n  }\n\n  renderGraph() {\n    const margin = { top: 10, right: 30, bottom: 60, left: 80 },\n      width = 480 - margin.left - margin.right,\n      height = 400 - margin.top - margin.bottom;\n\n    d3.selectAll(\"svg\").remove();\n    const svg = d3\n      .select(this.myRef.current)\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n    svg\n      .append(\"rect\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", \"100%\")\n      .attr(\"fill\", \"transparent\");\n\n    const xAxisKey = this.state.xAxisKey;\n    const yAxisKey = this.state.yAxisKey;\n\n    // Add X axis\n    const x = d3\n      .scaleLinear()\n      .domain([0, getMaxValue(this.tagsData, xAxisKey)])\n      .range([0, width]);\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(d3.axisBottom(x));\n    svg\n      .append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .style(\"fill\", \"white\")\n      .attr(\"x\", width)\n      .attr(\"y\", height + margin.top + 30)\n      .text(xAxisKey);\n\n    // Add Y axis\n    const y = d3\n      .scaleLinear()\n      .domain([0, getMaxValue(this.tagsData, yAxisKey)])\n      .range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y));\n    svg\n      .append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .style(\"fill\", \"white\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", -margin.left + 20)\n      .attr(\"x\", -margin.top)\n      .text(yAxisKey);\n\n    // Add dots\n    svg\n      .append(\"g\")\n      .selectAll(\"dot\")\n      .data(this.tagsData)\n      .join(\"circle\")\n      .attr(\"data-id\", function (d: any) {\n        return d.id;\n      })\n      .attr(\"cx\", function (d: any) {\n        return x(d[xAxisKey]);\n      })\n      .attr(\"cy\", function (d: any) {\n        return y(d[yAxisKey]);\n      })\n      .attr(\"r\", 1.5)\n      .attr(\"class\", (d: any) => {\n        return this.state.selectedIds.includes(d.id) ? \"selected\" : \"\";\n      });\n\n    // Rectangular select\n    svg\n      .on(\"mousedown\", function (e) {\n        d3.selectAll(\"circle.selected\").classed(\"selected\", false);\n        svg\n          .append(\"rect\")\n          .attr(\"x\", e.layerX - margin.left)\n          .attr(\"y\", e.layerY - margin.top)\n          .attr(\"width\", 0)\n          .attr(\"height\", 0)\n          .attr(\"class\", \"selection\");\n      })\n\n      .on(\"mouseup\", (e) => {\n        const selectedIds: number[] = [];\n        d3.selectAll(\"circle.selected\").each((state_data: any) => {\n          selectedIds.push(state_data.id);\n        });\n        this.setState({\n          selectedIds,\n        });\n      })\n\n      // .on(\"mouseout\", function (e) {\n      //   console.log(\"mouseout\", e);\n      //   if (e.relatedTarget !== \"svg\") {\n      //     svg.selectAll(\"rect.selection\").remove();\n      //     d3.selectAll(\"g.state.selection\").classed(\"selection\", false);\n      //   }\n      // })\n\n      .on(\"mousemove\", function (e) {\n        let s = svg.select(\"rect.selection\");\n        if (!s.empty()) {\n          let d = {\n            x: parseInt(s.attr(\"x\"), 10),\n            y: parseInt(s.attr(\"y\"), 10),\n            width: parseInt(s.attr(\"width\"), 10),\n            height: parseInt(s.attr(\"height\"), 10),\n          };\n          let move = {\n            x: e.layerX - margin.left - d.x,\n            y: e.layerY - margin.top - d.y,\n          };\n          if (move.x < 1 || move.x * 2 < d.width) {\n            d.x = e.layerX - margin.left;\n            d.width -= move.x;\n          } else {\n            d.width = move.x;\n          }\n          if (move.y < 1 || move.y * 2 < d.height) {\n            d.y = e.layerY - margin.top;\n            d.height -= move.y;\n          } else {\n            d.height = move.y;\n          }\n\n          s.attr(\"x\", d.x)\n            .attr(\"y\", d.y)\n            .attr(\"width\", d.width)\n            .attr(\"height\", d.height);\n\n          d3.selectAll(\"g > circle.selected\").classed(\"selected\", false);\n          d3.selectAll(\"g > circle\").each(function () {\n            if (\n              !d3.select(this).classed(\"selected\") &&\n              parseInt(d3.select(this).attr(\"cx\")) >= d.x &&\n              parseInt(d3.select(this).attr(\"cx\")) <= d.x + d.width &&\n              parseInt(d3.select(this).attr(\"cy\")) >= d.y &&\n              parseInt(d3.select(this).attr(\"cy\")) <= d.y + d.height\n            ) {\n              d3.select(this).attr(\"class\", \"selected\");\n            }\n          });\n        }\n      });\n  }\n\n  handleXAxisChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    this.setState({\n      xAxisKey: event.target.value,\n    });\n  }\n\n  handleYAxisChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    this.setState({\n      yAxisKey: event.target.value,\n    });\n  }\n\n  render() {\n    this.renderGraph();\n    let selectedTags = this.tagsData.filter((obj) => {\n      return this.state.selectedIds.includes(obj.id);\n    });\n\n    return (\n      <>\n        <h1>ScatterPlot Chart</h1>\n        <div className=\"wrapper\">\n          <DropdownSelect\n            xAxisValue={this.state.xAxisKey}\n            yAxisValue={this.state.yAxisKey}\n            options={getNumericOptions(this.numericKeys)}\n            handleXAxisChange={this.handleXAxisChange}\n            handleYAxisChange={this.handleYAxisChange}\n          />\n          <div ref={this.myRef}></div>\n        </div>\n        <h4>\n          You selected {selectedTags.length}{\" \"}\n          {selectedTags.length !== 1 ? \"sequences\" : \"sequence\"}\n        </h4>\n        {selectedTags.length > 0 && (\n          <div className=\"table\">\n            <div className=\"row\">\n              <span>Id</span>\n              <span>CDR3 Nucleotides</span>\n            </div>\n\n            {selectedTags.slice(0, 10).map((tag) => {\n              return (\n                <div key={tag.id} className=\"row tags\">\n                  <span>{tag.id}</span>\n                  <span>{tag[\"CDR3 Nucleotides\"]}</span>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </>\n    );\n  }\n}\nexport default ScatterChart;\n\nfunction getTagsData() {\n  return Object.keys(data).map((id) => {\n    const parsedObj = JSON.parse((data as any)[id].tags);\n    return { id, ...parsedObj[\"igx-profile\"], ...parsedObj[\"airr\"] };\n  });\n}\n\nfunction getNumericKeys(object: any): string[] {\n  const numericKeys = [];\n  for (const [key, value] of Object.entries(object)) {\n    if (typeof value === \"number\") {\n      numericKeys.push(key);\n    }\n  }\n  return numericKeys;\n}\n\nfunction getNumericOptions(keys: string[]): { value: string; label: string }[] {\n  return keys.map((key) => {\n    return { value: key, label: key };\n  });\n}\n\nfunction getMaxValue(tags: any[], key: string) {\n  return tags.reduce(\n    (prev, current) => (prev > current[key] ? prev : current[key]),\n    0\n  );\n}\n","import React from \"react\";\nimport ScatterChart from \"./scatterplot-chart/scatterplot-chart\";\n\nexport const HomeComponent = () => {\n  return (\n    <>\n      <ScatterChart />\n    </>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { HomeComponent } from './app/components/home';\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <HomeComponent/>\n      </div>\n    </div>\n  );\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}